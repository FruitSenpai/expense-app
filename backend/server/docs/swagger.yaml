definitions:
  api.createExpenseRequest:
    properties:
      amount:
        type: number
      categoryId:
        type: integer
      date:
        type: string
      description:
        type: string
      merchant:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  api.userLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.userLoginResponse:
    properties:
      token:
        type: string
    type: object
  api.userRegistrationRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  api.userRegistrationResponse:
    properties:
      message:
        type: string
    type: object
  models.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  models.Expense:
    properties:
      amount:
        type: number
      categoryId:
        type: integer
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      merchant:
        type: string
      ownerID:
        type: integer
      title:
        type: string
    type: object
  models.OutgoingUser:
    properties:
      firstName:
        type: string
      id:
        type: integer
      isAdmin:
        type: boolean
      lastName:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.userLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User registration request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.userRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.userRegistrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User registration
      tags:
      - Auth
  /categories:
    get:
      consumes:
      - application/json
      description: List all categories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List all categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create a category
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
      summary: Create a category
      tags:
      - Categories
  /expenses:
    get:
      consumes:
      - application/json
      description: Get a list of expenses
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Expense'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a list of expenses
      tags:
      - expenses
    post:
      consumes:
      - application/json
      description: Create a new expense
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Expense object
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/api.createExpenseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Expense'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new expense
      tags:
      - expenses
  /expenses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing expense
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an existing expense
      tags:
      - expenses
    get:
      consumes:
      - application/json
      description: Get a single expense
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Expense'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a single expense
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: Update an existing expense
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      - description: Expense object
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/api.createExpenseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Expense'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing expense
      tags:
      - expenses
  /users:
    get:
      consumes:
      - application/json
      description: List users
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OutgoingUser'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List users
      tags:
      - users
swagger: "2.0"
